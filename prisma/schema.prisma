// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}
datasource db {
  provider = "mysql"
  url = env("DATABASE_URL")
  relationMode = "prisma"
}



model User {
  id            String    @id @default(cuid())
  name          String?
  password      String
  type          String
  bio           String?
  email         String?   @unique
  image         String?
  emailVerified DateTime?
  accounts      Account[]
  sessions      Session[]
  Report        Report[]
  Request       Request[]

}


model Report {
  id           String    @id @default(uuid())
  title        String? 
  userId       String
  ClientInformation String?  @db.LongText
  Details      String?
  Request      String?
  CreatedAt    DateTime  @default(now())
  user          User?            @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@index([id])
  @@index([userId])
}

model Request {
  id           String    @id @default(uuid())
  title        String? 
  userId       String
  description String?  @db.LongText
  CreatedAt    DateTime  @default(now())
  user          User?            @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@index([id])
  @@index([userId])
}


model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@index([id])
  @@index([userId])
  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@index([id])
  @@index([userId])
}



model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}